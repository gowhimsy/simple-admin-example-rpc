syntax = "proto3";

package example;
option go_package="./example";

message UUIDReq {
  string id = 1;
}

message TeacherInfo {
  optional string id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  optional string name = 4;
  optional int64 age = 5;
  optional int32 age_int32 = 6;
  optional int64 age_int64 = 7;
  optional uint64 age_uint = 8;
  optional uint32 age_uint32 = 9;
  optional uint64 age_uint64 = 10;
  optional double weight_float = 11;
  optional float weight_float32 = 12;
  optional string class_id = 13;
  optional int64 enroll_at = 14;
  optional bool status_bool = 15;
}

message BaseUUIDResp {
  string id = 1;
  string msg = 2;
}

message StudentListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string name = 3;
}

message TeacherListResp {
  uint64 total = 1;
  repeated TeacherInfo data = 2;
}

message TeacherListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string name = 3;
}

message IDsReq {
  repeated uint64 ids = 1;
}

message BaseResp {
  string msg = 1;
}

message BaseIDResp {
  uint64 id = 1;
  string msg = 2;
}

message PageInfoReq {
  uint64 page = 1;
  uint64 page_size = 2;
}

message StudentInfo {
  optional uint64 id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  optional string name = 4;
  optional int64 age = 5;
  optional int32 age_int8 = 6;
  optional uint32 age_uint8 = 7;
  optional int32 age_int16 = 8;
  optional uint32 age_uint16 = 9;
  optional int32 age_int32 = 10;
  optional uint32 age_uint32 = 11;
  optional int64 age_int64 = 12;
  optional uint64 age_uint64 = 13;
  optional int64 age_int = 14;
  optional uint64 age_uint = 15;
  optional double weight_float = 16;
  optional float weight_float32 = 17;
  optional string class_id = 18;
  optional int64 enroll_at = 19;
  optional bool status_bool = 20;
}

message StudentListResp {
  uint64 total = 1;
  repeated StudentInfo data = 2;
}

//  base message
message Empty {}

message IDReq {
  uint64 id = 1;
}

message UUIDsReq {
  repeated string ids = 1;
}

service Example {
  //  group: base
  rpc initDatabase(Empty) returns (BaseResp);
  //  Student management
  //  group: student
  rpc createStudent(StudentInfo) returns (BaseIDResp);
  //  group: student
  rpc updateStudent(StudentInfo) returns (BaseResp);
  //  group: student
  rpc getStudentList(StudentListReq) returns (StudentListResp);
  //  group: student
  rpc getStudentById(IDReq) returns (StudentInfo);
  //  group: student
  rpc deleteStudent(IDsReq) returns (BaseResp);
  //  Teacher management
  //  group: teacher
  rpc createTeacher(TeacherInfo) returns (BaseUUIDResp);
  //  group: teacher
  rpc updateTeacher(TeacherInfo) returns (BaseResp);
  //  group: teacher
  rpc getTeacherList(TeacherListReq) returns (TeacherListResp);
  //  group: teacher
  rpc getTeacherById(UUIDReq) returns (TeacherInfo);
  //  group: teacher
  rpc deleteTeacher(UUIDsReq) returns (BaseResp);
}

