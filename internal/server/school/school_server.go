// Code generated by goctl. DO NOT EDIT.
// Source: example.proto

package server

import (
	"context"

	"github.com/suyuan32/simple-admin-example-rpc/example"
	"github.com/suyuan32/simple-admin-example-rpc/internal/logic/school/teacher"
	"github.com/suyuan32/simple-admin-example-rpc/internal/svc"
)

type SchoolServer struct {
	svcCtx *svc.ServiceContext
	example.UnimplementedSchoolServer
}

func NewSchoolServer(svcCtx *svc.ServiceContext) *SchoolServer {
	return &SchoolServer{
		svcCtx: svcCtx,
	}
}

// Teacher management
func (s *SchoolServer) CreateTeacher(ctx context.Context, in *example.TeacherInfo) (*example.BaseUUIDResp, error) {
	l := teacher.NewCreateTeacherLogic(ctx, s.svcCtx)
	return l.CreateTeacher(in)
}

func (s *SchoolServer) UpdateTeacher(ctx context.Context, in *example.TeacherInfo) (*example.BaseResp, error) {
	l := teacher.NewUpdateTeacherLogic(ctx, s.svcCtx)
	return l.UpdateTeacher(in)
}

func (s *SchoolServer) GetTeacherList(ctx context.Context, in *example.TeacherListReq) (*example.TeacherListResp, error) {
	l := teacher.NewGetTeacherListLogic(ctx, s.svcCtx)
	return l.GetTeacherList(in)
}

func (s *SchoolServer) GetTeacherById(ctx context.Context, in *example.UUIDReq) (*example.TeacherInfo, error) {
	l := teacher.NewGetTeacherByIdLogic(ctx, s.svcCtx)
	return l.GetTeacherById(in)
}

func (s *SchoolServer) DeleteTeacher(ctx context.Context, in *example.UUIDsReq) (*example.BaseResp, error) {
	l := teacher.NewDeleteTeacherLogic(ctx, s.svcCtx)
	return l.DeleteTeacher(in)
}
